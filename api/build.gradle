plugins {
    id 'java'
    id 'application'
    id 'idea'

    id 'org.springframework.boot' version '2.1.6.RELEASE'
    id 'com.google.cloud.tools.jib' version '1.4.0'
    id "org.jetbrains.kotlin.jvm" version "1.3.41"
}

repositories {
    mavenCentral()
}

configurations {
    ktlint
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    ktlint "com.pinterest:ktlint:0.34.2"

    implementation 'org.springframework.boot:spring-boot-starter-web:2.1.6.RELEASE'
    implementation 'org.springframework.boot:spring-boot-dependencies:2.1.6.RELEASE'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.3.41'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.41'

    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.1.6.RELEASE'
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:1.3.41"
    testImplementation("org.junit.jupiter:junit-jupiter:5.5.1")
    testImplementation("org.junit.platform:junit-platform-runner:1.5.1")

    testRuntime("org.junit.platform:junit-platform-launcher:1.0.0")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.5.1")
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

test {
    useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
        }
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/pinterest/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "-F", "src/**/*.kt"
}