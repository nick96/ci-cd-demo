variables:
  - group: demo-vars

jobs:
  - job: API
    displayName: API test and build
    variables:
      IMAGE_NAME: nick96/demo-api
    pool:
      vmImage: "ubuntu-16.04"
    steps:
      - script: ./gradlew test --no-daemon
        displayName: Test API
        workingDirectory: api/
      - script: ./gradlew jibDockerBuild --image=$(IMAGE_NAME) --no-daemon
        displayName: Build API docker image
        workingDirectory: api/
      - script: docker tag $(IMAGE_NAME):latest $(IMAGE_NAME):$(Build.SourceVersion)
        displayName: Tag image
      - task: Docker@2
        displayName: Log into docker hub
        inputs:
          command: login
          containerRegistry: nick96-docker-hub
      - task: Docker@2
        displayName: Push API docker image to container registry
        inputs:
          command: push
          containerRegistry: nick96-docker-hub
          repository: $(IMAGE_NAME)
          tags: $(Build.SourceVersion), latest
      - task: DownloadSecureFile@1
        name: sshKey
        inputs:
          secureFile: azure_id_rsa
      - script: |
              ansible-playbook -v playbook.yml \
                 -i hosts \
                 -u root \
                 --extra-vars "api_image=$(IMAGE_NAME):$(Build.SourceVersion) email=$(EMAIL) ansible_python_interpreter=/usr/bin/python3" \
                 --private-key $(sshKey.secureFilePath)
        displayName: Ansible deployment
        workingDirectory: 'api/playbook'

  - job: Frontend
    displayName: Frontend test and build
    pool:
      vmImage: "ubuntu-16.04"
    steps:
      - script: yarn install && CI=1 yarn test
        displayName: Test frontend
        workingDirectory: frontend
      - script: yarn build
        displayName: Build frontend
        workingDirectory: frontend
      - script: sudo npm install -g firebase-tools
        displayName: Install firebase CLI
      - script: sudo firebase deploy --token=$(FIREBASE_TOKEN) --project $(FIREBASE_PROJECT)
        workingDirectory: frontend
        displayName: Firebase deploy