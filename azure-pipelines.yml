jobs:

  - job: APITestAndBuild
    displayName: API test and build
    variables:
      IMAGE_NAME: nick96/demo-api
    pool:
      vmImage: "ubuntu-16.04"
    steps:
      - script: ./gradlew test
        displayName: Test API
        workingDirectory: api/
      - script: ./gradlew jibDockerBuild --image=$(IMAGE_NAME)
        displayName: Build API docker image
        workingDirectory: api/
      - task: Docker@2
        displayName: Log into docker hub
        inputs:
          command: login
          containerRegistry: nick96-docker-hub
      - task: Docker@2
        displayName: Push API docker image to container registry
        inputs:
          command: push
          containerRegistry: nick96-docker-hub
          repository: $(IMAGE_NAME)
          tags: $(Build.SourceVersion)

  - job: FrontendTestAndBuild
    displayName: Frontend test and build
    pool:
      vmImage: "ubuntu-16.04"
    steps:
      - script: yarn install && CI=1 yarn test
        displayName: Test frontend
        workingDirectory: frontend
      - script: yarn build
        displayName: Build frontend
        workingDirectory: frontend
      - task: PublishBuildArtifacts@1
        displayName: Archive frontend artifacts
        inputs:
          ArtifactName: frontend
          PathtoPublish: frontend/build

  - deployment: APIDeploy
    displayName: API deployment
    environment: api-deploy
    dependsOn: APITestAndBuild
    pool:
      vmImage: "ubuntu-16.04"
    strategy:
      runOnce:
        deploy:
          steps:
          - script: echo "TODO Invoke terraform plan"
            displayName: "Terraform plan"
          - script: echo "TODO Invoke terraform apply"
            displayName: "Terraform apply"
          - script: echo "TODO Invoke ansible playbook"
            displayName: "Ansible deployment"

  - deployment: FrontendDeploy
    displayName: Frontend deployment
    environment: frontend-deploy
    dependsOn: FrontendTestAndBuild
    pool:
      vmImage: "ubuntu-16.04"
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: frontend
          